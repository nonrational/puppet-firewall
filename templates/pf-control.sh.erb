#!/bin/bash

# ==============================================================================
#   pf-control.sh
#
#   Packet Filter control script
#   Copyright 2012 Hannes Juutilainen <hjuutilainen@mac.com>
#   https://github.com/hjuutilainen/pf-conf
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# ==============================================================================

# ========================================
# Declare variables
# ========================================

FIREWALL_CONFIG=<%= scope.lookupvar('configdir') %>/pf.conf

PFCTL="/sbin/pfctl"
ECHO="/bin/echo"
STAT="/usr/bin/stat"
PRINTF="/usr/bin/printf"
SYSCTL="/usr/sbin/sysctl"
OP_MODE="restart"

# ========================================
function usage () {
# ========================================
    echo ""
    echo "$0 [-h|--help|h] [start|stop|restart]"
    echo ""
    echo "Where:"
    echo "-h|--help|h   Print this message"
    echo "start         Start the firewall (without flushing)"
    echo "stop          Stop the firewall and flush rules"
    echo "restart       Flush and re-read all rules and restart firewall"
    exit
}

# ========================================
function enablePfctl () {
# ========================================
    $ECHO ""
    $ECHO "Starting Packet Filter and reading default rules"
    $PFCTL -E > /dev/null 2>&1
    $PFCTL -f $FIREWALL_CONFIG > /dev/null 2>&1
}

# ========================================
function disablePfctl () {
# ========================================
    $ECHO ""
    $ECHO "Disabling Packet Filter"
    $PFCTL -d
}


# ========================================
function showCurrentRules () {
# ========================================
    $ECHO ""
    $ECHO "Current rules:"
    $PFCTL -a '*' -sr
}

# ========================================
function configureKernelParameters () {
# ========================================
    $SYSCTL -w net.inet.ip.fw.enable=1 > /dev/null 2>&1
    $SYSCTL -w net.inet.ip.fw.verbose=2 > /dev/null 2>&1
    $SYSCTL -w net.inet6.ip6.fw.verbose=0 > /dev/null 2>&1
    $SYSCTL -w net.inet.ip.fw.verbose_limit=0 > /dev/null 2>&1
    $SYSCTL -w net.inet.ip.forwarding=0 > /dev/null 2>&1
}


while test -n "$1"; do
  case $1 in
      -h|--help|h)
      usage
      ;;
      start)
      OP_MODE="start"
      shift
      ;;
      stop)
      OP_MODE="stop"
      shift
      ;;
      restart)
      OP_MODE="restart"
      shift
      ;;
      *)
      usage
      ;;
  esac
done

# Check for root
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root" 2>&1
    exit 1
else
    if [[ $OP_MODE == "start" ]]; then
        configureKernelParameters
        enablePfctl
        showCurrentRules

    elif [[ $OP_MODE == "stop" ]]; then
        disablePfctl

    elif [[ $OP_MODE == "restart" ]]; then
        configureKernelParameters
        disablePfctl
        enablePfctl
        showCurrentRules

    else
        echo "Unknown operation mode..."
        usage
        exit 1
    fi
fi

exit 0
